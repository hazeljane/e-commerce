{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Documents\\\\coffee-shop\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport CoffeeShop from \"./CoffeeShop\";\nimport Espresso from \"./Espresso\";\nimport Refresher from \"./Refresher\";\nimport Tea from \"./Tea\";\nimport Pastry from \"./Pastry\";\nimport BlendedBeverage from \"./BlendedBeverage\";\nimport About from \"./About\";\nimport Service from \"./Service\";\nimport AddToCart from \"./AddToCart\";\nimport Payment from \"./Payment\";\nimport History from \"./History\";\nimport Contact from \"./Contact\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize cart from localStorage or empty categories\n  const [cartItems, setCart] = useState(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? JSON.parse(savedCart) : {\n      espresso: [],\n      refresher: [],\n      tea: [],\n      pastry: [],\n      blended: []\n    };\n  });\n\n  // Initialize order history from localStorage or empty\n  const [orderHistory, setOrderHistory] = useState(() => {\n    const savedHistory = localStorage.getItem(\"orderHistory\");\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n\n  // Persist cartItems to localStorage when changed\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Persist orderHistory to localStorage when changed\n  useEffect(() => {\n    localStorage.setItem(\"orderHistory\", JSON.stringify(orderHistory));\n  }, [orderHistory]);\n\n  // Clear cart helper\n  const clearCart = () => {\n    setCart({\n      espresso: [],\n      refresher: [],\n      tea: [],\n      pastry: [],\n      blended: []\n    });\n  };\n\n  // Add single item to cart by category, merging quantity if item exists\n  const addToCart = (item, category) => {\n    setCart(prev => {\n      const updatedCategory = Array.isArray(prev[category]) ? [...prev[category]] : [];\n      const index = updatedCategory.findIndex(i => i.id === item.id);\n      if (index !== -1) {\n        updatedCategory[index] = {\n          ...updatedCategory[index],\n          quantity: (updatedCategory[index].quantity || 1) + (item.quantity || 1)\n        };\n      } else {\n        updatedCategory.push({\n          ...item,\n          quantity: item.quantity || 1\n        });\n      }\n      return {\n        ...prev,\n        [category]: updatedCategory\n      };\n    });\n  };\n\n  // Remove item by id from a category\n  const removeFromCart = (id, category) => {\n    setCart(prev => {\n      const updatedCategory = prev[category].filter(item => item.id !== id);\n      return {\n        ...prev,\n        [category]: updatedCategory\n      };\n    });\n  };\n\n  // Update quantity for a specific item in a category\n  const updateQuantity = (id, category, newQty) => {\n    setCart(prev => {\n      const updatedCategory = prev[category].map(item => item.id === id ? {\n        ...item,\n        quantity: newQty\n      } : item);\n      return {\n        ...prev,\n        [category]: updatedCategory\n      };\n    });\n  };\n\n  // Add multiple items at once to a category (used for re-adding from history)\n  const addMultipleToCart = (items, category) => {\n    setCart(prev => {\n      let updatedCategory = [...(prev[category] || [])];\n      items.forEach(item => {\n        const exists = updatedCategory.find(i => i.id === item.id);\n        if (exists) {\n          updatedCategory = updatedCategory.map(i => i.id === item.id ? {\n            ...i,\n            quantity: i.quantity + item.quantity\n          } : i);\n        } else {\n          updatedCategory.push(item);\n        }\n      });\n      return {\n        ...prev,\n        [category]: updatedCategory\n      };\n    });\n  };\n\n  // After an order is placed, remove ordered quantities from cart\n  const removeOrderedItemsFromCart = orderedItems => {\n    setCart(prevCart => {\n      const updatedCart = {\n        ...prevCart\n      };\n      Object.keys(updatedCart).forEach(category => {\n        updatedCart[category] = updatedCart[category].map(cartItem => {\n          const orderedItem = orderedItems.find(oi => oi.id === cartItem.id && oi.category === category);\n          if (orderedItem) {\n            const newQty = (cartItem.quantity || 0) - (orderedItem.quantity || 0);\n            if (newQty > 0) {\n              return {\n                ...cartItem,\n                quantity: newQty\n              };\n            }\n            return null; // remove item if quantity <= 0\n          }\n          return cartItem;\n        }).filter(Boolean);\n      });\n      return updatedCart;\n    });\n  };\n\n  // Add new order to history with date and payment info\n  const addOrderToHistory = (orderedItems, paymentMethod = \"Pay on Delivery\") => {\n    const newOrder = {\n      id: Date.now(),\n      date: new Date().toLocaleString(),\n      paymentMethod,\n      items: orderedItems\n    };\n    setOrderHistory(prev => [...prev, newOrder]);\n  };\n\n  // Calculate total number of items in cart\n  const totalItems = Object.values(cartItems).reduce((sum, categoryItems) => sum + categoryItems.reduce((catSum, item) => catSum + item.quantity, 0), 0);\n\n  // Clear all order history\n  const clearHistory = () => {\n    setOrderHistory([]);\n    localStorage.removeItem(\"orderHistory\");\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/service\",\n        element: /*#__PURE__*/_jsxDEV(Service, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/coffee\",\n        element: /*#__PURE__*/_jsxDEV(CoffeeShop, {\n          addToCart: addToCart,\n          totalItems: totalItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/espresso\",\n        element: /*#__PURE__*/_jsxDEV(Espresso, {\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/refresher\",\n        element: /*#__PURE__*/_jsxDEV(Refresher, {\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tea\",\n        element: /*#__PURE__*/_jsxDEV(Tea, {\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/pastry\",\n        element: /*#__PURE__*/_jsxDEV(Pastry, {\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/blended\",\n        element: /*#__PURE__*/_jsxDEV(BlendedBeverage, {\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cart\",\n        element: /*#__PURE__*/_jsxDEV(AddToCart, {\n          cart: cartItems,\n          removeFromCart: removeFromCart,\n          updateQuantity: updateQuantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/payment\",\n        element: /*#__PURE__*/_jsxDEV(Payment, {\n          cart: cartItems,\n          addOrderToHistory: addOrderToHistory,\n          clearCart: clearCart,\n          removeOrderedItemsFromCart: removeOrderedItemsFromCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/history\",\n        element: /*#__PURE__*/_jsxDEV(History, {\n          orderHistory: orderHistory,\n          addMultipleToCart: addMultipleToCart,\n          clearHistory: clearHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EfKELuB2E2w70ZbN9fy/e014elM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Home","CoffeeShop","Espresso","Refresher","Tea","Pastry","BlendedBeverage","About","Service","AddToCart","Payment","History","Contact","jsxDEV","_jsxDEV","App","_s","cartItems","setCart","savedCart","localStorage","getItem","JSON","parse","espresso","refresher","tea","pastry","blended","orderHistory","setOrderHistory","savedHistory","setItem","stringify","clearCart","addToCart","item","category","prev","updatedCategory","Array","isArray","index","findIndex","i","id","quantity","push","removeFromCart","filter","updateQuantity","newQty","map","addMultipleToCart","items","forEach","exists","find","removeOrderedItemsFromCart","orderedItems","prevCart","updatedCart","Object","keys","cartItem","orderedItem","oi","Boolean","addOrderToHistory","paymentMethod","newOrder","Date","now","date","toLocaleString","totalItems","values","reduce","sum","categoryItems","catSum","clearHistory","removeItem","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","cart","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Documents/coffee-shop/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport CoffeeShop from \"./CoffeeShop\";\nimport Espresso from \"./Espresso\";\nimport Refresher from \"./Refresher\";\nimport Tea from \"./Tea\";\nimport Pastry from \"./Pastry\";\nimport BlendedBeverage from \"./BlendedBeverage\";\nimport About from \"./About\";\nimport Service from \"./Service\";\nimport AddToCart from \"./AddToCart\";\nimport Payment from \"./Payment\";\nimport History from \"./History\";\nimport Contact from \"./Contact\";\nimport \"./App.css\";\n\nfunction App() {\n  // Initialize cart from localStorage or empty categories\n  const [cartItems, setCart] = useState(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart\n      ? JSON.parse(savedCart)\n      : { espresso: [], refresher: [], tea: [], pastry: [], blended: [] };\n  });\n\n  // Initialize order history from localStorage or empty\n  const [orderHistory, setOrderHistory] = useState(() => {\n    const savedHistory = localStorage.getItem(\"orderHistory\");\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n\n  // Persist cartItems to localStorage when changed\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Persist orderHistory to localStorage when changed\n  useEffect(() => {\n    localStorage.setItem(\"orderHistory\", JSON.stringify(orderHistory));\n  }, [orderHistory]);\n\n  // Clear cart helper\n  const clearCart = () => {\n    setCart({\n      espresso: [],\n      refresher: [],\n      tea: [],\n      pastry: [],\n      blended: [],\n    });\n  };\n\n  // Add single item to cart by category, merging quantity if item exists\n  const addToCart = (item, category) => {\n    setCart((prev) => {\n      const updatedCategory = Array.isArray(prev[category]) ? [...prev[category]] : [];\n      const index = updatedCategory.findIndex((i) => i.id === item.id);\n\n      if (index !== -1) {\n        updatedCategory[index] = {\n          ...updatedCategory[index],\n          quantity: (updatedCategory[index].quantity || 1) + (item.quantity || 1),\n        };\n      } else {\n        updatedCategory.push({\n          ...item,\n          quantity: item.quantity || 1,\n        });\n      }\n\n      return { ...prev, [category]: updatedCategory };\n    });\n  };\n\n  // Remove item by id from a category\n  const removeFromCart = (id, category) => {\n    setCart((prev) => {\n      const updatedCategory = prev[category].filter((item) => item.id !== id);\n      return { ...prev, [category]: updatedCategory };\n    });\n  };\n\n  // Update quantity for a specific item in a category\n  const updateQuantity = (id, category, newQty) => {\n    setCart((prev) => {\n      const updatedCategory = prev[category].map((item) =>\n        item.id === id ? { ...item, quantity: newQty } : item\n      );\n      return { ...prev, [category]: updatedCategory };\n    });\n  };\n\n  // Add multiple items at once to a category (used for re-adding from history)\n  const addMultipleToCart = (items, category) => {\n    setCart((prev) => {\n      let updatedCategory = [...(prev[category] || [])];\n      items.forEach((item) => {\n        const exists = updatedCategory.find((i) => i.id === item.id);\n        if (exists) {\n          updatedCategory = updatedCategory.map((i) =>\n            i.id === item.id ? { ...i, quantity: i.quantity + item.quantity } : i\n          );\n        } else {\n          updatedCategory.push(item);\n        }\n      });\n      return { ...prev, [category]: updatedCategory };\n    });\n  };\n\n  // After an order is placed, remove ordered quantities from cart\n  const removeOrderedItemsFromCart = (orderedItems) => {\n    setCart((prevCart) => {\n      const updatedCart = { ...prevCart };\n\n      Object.keys(updatedCart).forEach((category) => {\n        updatedCart[category] = updatedCart[category]\n          .map((cartItem) => {\n            const orderedItem = orderedItems.find(\n              (oi) => oi.id === cartItem.id && oi.category === category\n            );\n\n            if (orderedItem) {\n              const newQty = (cartItem.quantity || 0) - (orderedItem.quantity || 0);\n              if (newQty > 0) {\n                return { ...cartItem, quantity: newQty };\n              }\n              return null; // remove item if quantity <= 0\n            }\n            return cartItem;\n          })\n          .filter(Boolean);\n      });\n\n      return updatedCart;\n    });\n  };\n\n  // Add new order to history with date and payment info\n  const addOrderToHistory = (orderedItems, paymentMethod = \"Pay on Delivery\") => {\n    const newOrder = {\n      id: Date.now(),\n      date: new Date().toLocaleString(),\n      paymentMethod,\n      items: orderedItems,\n    };\n    setOrderHistory((prev) => [...prev, newOrder]);\n  };\n\n  // Calculate total number of items in cart\n  const totalItems = Object.values(cartItems).reduce(\n    (sum, categoryItems) =>\n      sum + categoryItems.reduce((catSum, item) => catSum + item.quantity, 0),\n    0\n  );\n\n  // Clear all order history\n  const clearHistory = () => {\n    setOrderHistory([]);\n    localStorage.removeItem(\"orderHistory\");\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"/service\" element={<Service />} />\n\n        {/* CoffeeShop route passes addToCart & totalItems */}\n        <Route\n          path=\"/coffee\"\n          element={<CoffeeShop addToCart={addToCart} totalItems={totalItems} />}\n        />\n\n        {/* Individual category pages with addToCart */}\n        <Route path=\"/espresso\" element={<Espresso addToCart={addToCart} />} />\n        <Route path=\"/refresher\" element={<Refresher addToCart={addToCart} />} />\n        <Route path=\"/tea\" element={<Tea addToCart={addToCart} />} />\n        <Route path=\"/pastry\" element={<Pastry addToCart={addToCart} />} />\n        <Route path=\"/blended\" element={<BlendedBeverage addToCart={addToCart} />} />\n\n        {/* Cart page */}\n        <Route\n          path=\"/cart\"\n          element={\n            <AddToCart\n              cart={cartItems}\n              removeFromCart={removeFromCart}\n              updateQuantity={updateQuantity}\n            />\n          }\n        />\n\n        {/* Payment page */}\n        <Route\n          path=\"/payment\"\n          element={\n            <Payment\n              cart={cartItems}\n              addOrderToHistory={addOrderToHistory}\n              clearCart={clearCart}\n              removeOrderedItemsFromCart={removeOrderedItemsFromCart}\n            />\n          }\n        />\n\n        {/* Order history page */}\n        <Route\n          path=\"/history\"\n          element={\n            <History\n              orderHistory={orderHistory}\n              addMultipleToCart={addMultipleToCart}\n              clearHistory={clearHistory}\n            />\n          }\n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}