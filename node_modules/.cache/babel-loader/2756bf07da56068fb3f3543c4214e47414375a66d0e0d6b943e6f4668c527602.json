{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Documents\\\\coffee-shop\\\\src\\\\CircularText.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CircularText({\n  text,\n  radius = 120,\n  startAngle,\n  endAngle,\n  invert\n}) {\n  const characters = text.split(\"\");\n  const totalAngle = Math.abs(endAngle - startAngle);\n  const compression = 0.7;\n  function getCompressedAngle(index) {\n    const N = characters.length - 1;\n    let t = index / N;\n    t = t * (1 - compression) + 0.5 * compression;\n    return startAngle < endAngle ? startAngle + t * totalAngle : startAngle - t * totalAngle;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: `${radius * 2}px`,\n      height: `${radius * 2}px`\n    },\n    children: characters.map((char, index) => {\n      const angle = getCompressedAngle(index);\n      const rad = angle * Math.PI / 180;\n      const x = radius + radius * Math.cos(rad);\n      const y = radius - radius * Math.sin(rad);\n      const rotation = invert ? angle + 270 : angle - 90;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: \"absolute\",\n          left: `${x}px`,\n          top: `${y}px`,\n          transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\n          fontSize: \"20px\",\n          fontFamily: \"Georgia, serif\",\n          color: \"#5a3e36\",\n          userSelect: \"none\"\n        },\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = CircularText;\nexport default function TopAndBottomCurvedTextCompressed() {\n  const radius = 120;\n  const bottomRadius = radius * 0.9; // smaller radius for bottom text\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: radius * 2,\n      height: radius * 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularText, {\n      text: \"the daily grind\",\n      radius: radius,\n      startAngle: 180,\n      endAngle: 0,\n      invert: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CircularText, {\n      text: \"coffee house\",\n      radius: bottomRadius,\n      startAngle: 180,\n      endAngle: 360,\n      invert: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c2 = TopAndBottomCurvedTextCompressed;\nvar _c, _c2;\n$RefreshReg$(_c, \"CircularText\");\n$RefreshReg$(_c2, \"TopAndBottomCurvedTextCompressed\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CircularText","text","radius","startAngle","endAngle","invert","characters","split","totalAngle","Math","abs","compression","getCompressedAngle","index","N","length","t","style","position","width","height","children","map","char","angle","rad","PI","x","cos","y","sin","rotation","left","top","transform","fontSize","fontFamily","color","userSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","TopAndBottomCurvedTextCompressed","bottomRadius","_c2","$RefreshReg$"],"sources":["C:/Users/ACER/Documents/coffee-shop/src/CircularText.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction CircularText({ text, radius = 120, startAngle, endAngle, invert }) {\r\n  const characters = text.split(\"\");\r\n  const totalAngle = Math.abs(endAngle - startAngle);\r\n\r\n  const compression = 0.7;\r\n\r\n  function getCompressedAngle(index) {\r\n    const N = characters.length - 1;\r\n    let t = index / N;\r\n    t = t * (1 - compression) + 0.5 * compression;\r\n\r\n    return startAngle < endAngle\r\n      ? startAngle + t * totalAngle\r\n      : startAngle - t * totalAngle;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        width: `${radius * 2}px`,\r\n        height: `${radius * 2}px`,\r\n      }}\r\n    >\r\n      {characters.map((char, index) => {\r\n        const angle = getCompressedAngle(index);\r\n        const rad = (angle * Math.PI) / 180;\r\n\r\n        const x = radius + radius * Math.cos(rad);\r\n        const y = radius - radius * Math.sin(rad);\r\n\r\n        const rotation = invert ? angle + 270 : angle - 90;\r\n\r\n        return (\r\n          <span\r\n            key={index}\r\n            style={{\r\n              position: \"absolute\",\r\n              left: `${x}px`,\r\n              top: `${y}px`,\r\n              transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\r\n              fontSize: \"20px\",\r\n              fontFamily: \"Georgia, serif\",\r\n              color: \"#5a3e36\",\r\n              userSelect: \"none\",\r\n            }}\r\n          >\r\n            {char}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function TopAndBottomCurvedTextCompressed() {\r\n  const radius = 120;\r\n  const bottomRadius = radius * 0.9; // smaller radius for bottom text\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", width: radius * 2, height: radius * 2 }}>\r\n      <CircularText\r\n        text=\"the daily grind\"\r\n        radius={radius}\r\n        startAngle={180}\r\n        endAngle={0}\r\n        invert={false}\r\n      />\r\n\r\n      <CircularText\r\n        text=\"coffee house\"\r\n        radius={bottomRadius}\r\n        startAngle={180}\r\n        endAngle={360}\r\n        invert={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}