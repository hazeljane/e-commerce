{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Documents\\\\coffee-shop\\\\src\\\\CircularText.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CircularText({\n  text,\n  radius = 120,\n  startAngle,\n  endAngle,\n  invert,\n  rotateLetters = true\n}) {\n  const characters = text.split(\"\");\n  const totalAngle = Math.abs(endAngle - startAngle);\n  const degreeStep = totalAngle / (characters.length - 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: `${radius * 2}px`,\n      height: `${radius * 2}px`\n    },\n    children: characters.map((char, index) => {\n      const angle = startAngle < endAngle ? startAngle + index * degreeStep : startAngle - index * degreeStep;\n      const rad = angle * Math.PI / 180;\n      const x = radius + radius * Math.cos(rad);\n      const y = radius - radius * Math.sin(rad);\n\n      // If rotateLetters is false, no rotation (0deg)\n      const rotation = rotateLetters ? invert ? angle + 270 : angle - 90 : 0;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: \"absolute\",\n          left: `${x}px`,\n          top: `${y}px`,\n          transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\n          fontSize: \"20px\",\n          fontFamily: \"Georgia, serif\",\n          color: \"#5a3e36\",\n          userSelect: \"none\"\n        },\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = CircularText;\nvar _c;\n$RefreshReg$(_c, \"CircularText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CircularText","text","radius","startAngle","endAngle","invert","rotateLetters","characters","split","totalAngle","Math","abs","degreeStep","length","style","position","width","height","children","map","char","index","angle","rad","PI","x","cos","y","sin","rotation","left","top","transform","fontSize","fontFamily","color","userSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Documents/coffee-shop/src/CircularText.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction CircularText({ text, radius = 120, startAngle, endAngle, invert, rotateLetters = true }) {\r\n  const characters = text.split(\"\");\r\n  const totalAngle = Math.abs(endAngle - startAngle);\r\n  const degreeStep = totalAngle / (characters.length - 1);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        width: `${radius * 2}px`,\r\n        height: `${radius * 2}px`,\r\n      }}\r\n    >\r\n      {characters.map((char, index) => {\r\n        const angle =\r\n          startAngle < endAngle\r\n            ? startAngle + index * degreeStep\r\n            : startAngle - index * degreeStep;\r\n\r\n        const rad = (angle * Math.PI) / 180;\r\n        const x = radius + radius * Math.cos(rad);\r\n        const y = radius - radius * Math.sin(rad);\r\n\r\n        // If rotateLetters is false, no rotation (0deg)\r\n        const rotation = rotateLetters ? (invert ? angle + 270 : angle - 90) : 0;\r\n\r\n        return (\r\n          <span\r\n            key={index}\r\n            style={{\r\n              position: \"absolute\",\r\n              left: `${x}px`,\r\n              top: `${y}px`,\r\n              transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\r\n              fontSize: \"20px\",\r\n              fontFamily: \"Georgia, serif\",\r\n              color: \"#5a3e36\",\r\n              userSelect: \"none\",\r\n            }}\r\n          >\r\n            {char}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC,IAAI;EAAEC,MAAM,GAAG,GAAG;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,aAAa,GAAG;AAAK,CAAC,EAAE;EAChG,MAAMC,UAAU,GAAGN,IAAI,CAACO,KAAK,CAAC,EAAE,CAAC;EACjC,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACP,QAAQ,GAAGD,UAAU,CAAC;EAClD,MAAMS,UAAU,GAAGH,UAAU,IAAIF,UAAU,CAACM,MAAM,GAAG,CAAC,CAAC;EAEvD,oBACEd,OAAA;IACEe,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,GAAGd,MAAM,GAAG,CAAC,IAAI;MACxBe,MAAM,EAAE,GAAGf,MAAM,GAAG,CAAC;IACvB,CAAE;IAAAgB,QAAA,EAEDX,UAAU,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC/B,MAAMC,KAAK,GACTnB,UAAU,GAAGC,QAAQ,GACjBD,UAAU,GAAGkB,KAAK,GAAGT,UAAU,GAC/BT,UAAU,GAAGkB,KAAK,GAAGT,UAAU;MAErC,MAAMW,GAAG,GAAID,KAAK,GAAGZ,IAAI,CAACc,EAAE,GAAI,GAAG;MACnC,MAAMC,CAAC,GAAGvB,MAAM,GAAGA,MAAM,GAAGQ,IAAI,CAACgB,GAAG,CAACH,GAAG,CAAC;MACzC,MAAMI,CAAC,GAAGzB,MAAM,GAAGA,MAAM,GAAGQ,IAAI,CAACkB,GAAG,CAACL,GAAG,CAAC;;MAEzC;MACA,MAAMM,QAAQ,GAAGvB,aAAa,GAAID,MAAM,GAAGiB,KAAK,GAAG,GAAG,GAAGA,KAAK,GAAG,EAAE,GAAI,CAAC;MAExE,oBACEvB,OAAA;QAEEe,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBe,IAAI,EAAE,GAAGL,CAAC,IAAI;UACdM,GAAG,EAAE,GAAGJ,CAAC,IAAI;UACbK,SAAS,EAAE,gCAAgCH,QAAQ,MAAM;UACzDI,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,gBAAgB;UAC5BC,KAAK,EAAE,SAAS;UAChBC,UAAU,EAAE;QACd,CAAE;QAAAlB,QAAA,EAEDE;MAAI,GAZAC,KAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaN,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GA9CQzC,YAAY;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}